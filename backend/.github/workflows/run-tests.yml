name: Run Tests

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Create necessary directories
      run: |
        mkdir -p uploads/videos
        mkdir -p uploads/temp
        mkdir -p summaries
        mkdir -p logs
        mkdir -p sessions
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.lock ]; then pip install -r requirements.lock; else pip install -r requirements.txt; fi
        
    - name: Create test environment file
      run: |
        cat > .env << 'EOF'
        # SecureVideoSummarizer Environment Configuration
        FLASK_APP=app.main
        FLASK_ENV=testing
        FLASK_DEBUG=1
        SECRET_KEY=github-actions-test-key
        SESSION_TYPE=filesystem
        SESSION_FILE_DIR=sessions
        VIDEOS_DIR=uploads/videos
        TEMP_DIR=uploads/temp
        SUMMARIES_DIR=summaries
        LOGS_DIR=logs
        UPLOAD_FOLDER=uploads
        ALLOWED_EXTENSIONS=mp4,avi,mov,wmv,flv,mkv
        MAX_CONTENT_LENGTH=100000000
        GOOGLE_CLIENT_ID=dummy-client-id
        GOOGLE_CLIENT_SECRET=dummy-client-secret
        OAUTH_REDIRECT_URI=http://localhost:5000/auth/callback
        ALLOWED_ORIGINS=http://localhost:3000
        RATE_LIMIT_DEFAULT=200 per day, 50 per hour
        RATE_LIMIT_AUTH=10 per minute
        BYPASS_AUTH_FOR_TESTING=true
        OLLAMA_API_URL=http://localhost:11434/api
        OLLAMA_MODEL=llama2:7b
        OLLAMA_TIMEOUT=10
        OLLAMA_MAX_TOKENS=512
        TESTING=true
        EOF
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=app
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          .coverage
          coverage.xml
          htmlcov/ 